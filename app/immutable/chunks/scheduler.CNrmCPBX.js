function y(){}const A=t=>t;function w(t,n){for(const e in n)t[e]=n[e];return t}function v(t){return t()}function B(){return Object.create(null)}function j(t){t.forEach(v)}function E(t){return typeof t=="function"}function C(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}function D(t){return Object.keys(t).length===0}function m(t,...n){if(t==null){for(const o of n)o(void 0);return y}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function F(t){let n;return m(t,e=>n=e)(),n}function P(t,n,e){t.$$.on_destroy.push(m(n,e))}function S(t,n,e,o){if(t){const r=k(t,n,e,o);return t[0](r)}}function k(t,n,e,o){return t[1]&&o?w(e.ctx.slice(),t[1](o(n))):e.ctx}function U(t,n,e,o){if(t[2]&&o){const r=t[2](o(e));if(n.dirty===void 0)return r;if(typeof r=="object"){const l=[],f=Math.max(n.dirty.length,r.length);for(let u=0;u<f;u+=1)l[u]=n.dirty[u]|r[u];return l}return n.dirty|r}return n.dirty}function G(t,n,e,o,r,l){if(r){const f=k(n,e,o,l);t.p(f,r)}}function H(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let o=0;o<e;o++)n[o]=-1;return n}return-1}function I(t,n,e){return t.set(e),n}function J(t){return t&&E(t.destroy)?t.destroy:y}let i;function d(t){i=t}function b(){if(!i)throw new Error("Function called outside component initialization");return i}function K(t){b().$$.on_mount.push(t)}function L(t){b().$$.after_update.push(t)}function N(t){b().$$.on_destroy.push(t)}const a=[],g=[];let c=[];const h=[],x=Promise.resolve();let p=!1;function O(){p||(p=!0,x.then(z))}function Q(){return O(),x}function q(t){c.push(t)}function R(t){h.push(t)}const _=new Set;let s=0;function z(){if(s!==0)return;const t=i;do{try{for(;s<a.length;){const n=a[s];s++,d(n),M(n.$$)}}catch(n){throw a.length=0,s=0,n}for(d(null),a.length=0,s=0;g.length;)g.pop()();for(let n=0;n<c.length;n+=1){const e=c[n];_.has(e)||(_.add(e),e())}c.length=0}while(a.length);for(;h.length;)h.pop()();p=!1,_.clear(),d(t)}function M(t){if(t.fragment!==null){t.update(),j(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(q)}}function T(t){const n=[],e=[];c.forEach(o=>t.indexOf(o)===-1?n.push(o):e.push(o)),e.forEach(o=>o()),c=n}export{R as A,N as B,F as C,I as a,L as b,P as c,g as d,E as e,q as f,B as g,z as h,A as i,D as j,T as k,i as l,d as m,y as n,K as o,v as p,a as q,j as r,C as s,Q as t,O as u,S as v,G as w,H as x,U as y,J as z};
